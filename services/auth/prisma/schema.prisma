generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum AccountStatus {
  PENDING
  ACTIVE
  INACTIVE
  SUSPENDED
}

model User {
  id                String             @id @default(cuid())
  email             String             @unique
  password          String
  name              String
  role              Role               @default(USER)
  verified          Boolean            @default(false)
  status            AccountStatus      @default(PENDING)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  loginHistories    LoginHistory[]
  verificationCodes VerificationCode[]
}

enum LoginAttemptStatus {
  SUCCESS
  FAILED
}

model LoginHistory {
  id        String             @id @default(cuid())
  userId    String
  ipAddress String?
  userAgent String?
  attempt   LoginAttemptStatus @default(SUCCESS)
  loginAt   DateTime           @default(now())
  user      User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
}

enum VerificationStatus {
  PENDING
  USED
  EXPIRED
}

enum VerificationCodeType {
  ACCOUNT_ACTIVATION
  PASSWORD_RESET
  EMAIL_CHANGE
  PHONE_CHANGE
  TWO_FACTOR_AUTH
  TWO_FACTOR_AUTH_DISABLE
}

model VerificationCode {
  id         String               @id @default(cuid())
  userId     String
  user       User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  code       String
  status     VerificationStatus   @default(PENDING)
  type       VerificationCodeType @default(ACCOUNT_ACTIVATION)
  issuedAt   DateTime             @default(now())
  expiresAt  DateTime
  verifiedAt DateTime?
  createdAt  DateTime             @default(now())
  updatedAt  DateTime             @updatedAt
}
